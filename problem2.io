/*
problem2.io
19.01.2016

# Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

/* Functional solution:
Number fibonacci := method(
  if(self <= 1, 1,
    (self - 1) fibonacci + (self - 2) fibonacci
  )
)

Range 1 to(1000) asList map(fibonacci) select(x, x isEven and x <= 4000000) sum println
*/

// Ugly solution
Number fibonacci := method(
  first  := 0
  second := 1
  next   := 0

  for(c, 0, self-1,
    if(c <= 1, next = c,
      next   = first + second
      first  = second
      second = next
    )
  )
  return next
)

fibN := 0
n    := 0
sum  := 0

while(fibN <= 4000000,
  fibN = n fibonacci
  n    = n + 1
  if(fibN isEven, sum = sum + fibN)
)
sum println
